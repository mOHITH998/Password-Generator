{"version":3,"sources":["components/Footer.js","App.js","components/Message.js","components/Characters.js","index.js"],"names":["Footer","className","href","App","useState","password","setPassword","passwordLength","setPasswordLength","upperCase","setUpperCase","lowerCase","setLowerCase","numbers","setNumbers","symbols","setSymbols","notify","success","isError","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","generatePassword","characterList","characterListLength","length","i","index","Math","round","random","charAt","onClick","e","newTextArea","document","createElement","innerText","body","appendChild","select","execCommand","remove","clipBoardHandler","Form","Label","Control","as","value","onChange","target","val","type","checked","Button","newestOnTop","rtl","pauseOnFocusLoss","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.013c9e88.chunk.js","sourcesContent":["import React from 'react'\r\nimport '../App.css'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className='footer'>\r\n               Made By: <a href='https://www.instagram.com/_mohith98/'>\r\n                   Mohith <i className='fab fa-instagram'></i>\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import {useState} from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport { includeUpperCase, includeLowerCase, includeNumbers, includeSymbols } from './components/Characters'\nimport  {success}from './components/Message'\nimport {toast, ToastContainer} from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport './App.css'\nimport Footer from './components/Footer';\n\nconst App = () => {\n\n  const [password, setPassword] = useState('')\n  const [passwordLength, setPasswordLength] = useState(18)\n  const [upperCase, setUpperCase] = useState(false)\n  const [lowerCase, setLowerCase] = useState(false)\n  const [numbers, setNumbers] = useState(false)\n  const [symbols, setSymbols] = useState(false)\n\n  const notify = (success, isError = false) => {\n    if(isError) {\n     toast.error(success, {\n       position: 'top-center'\n     })\n    } else {\n      toast(success, {\n        position: \"top-center\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      })\n    }\n  }\n  const generatePasswordHandler = e => {\n\n    if (!upperCase && \n      !lowerCase && \n      !numbers && \n      !symbols\n      ){\n   notify('You must Select atleast one option')\n    }\n\n    let characterList = ''\n\n    if (lowerCase) {\n      characterList = characterList + includeLowerCase\n    }\n\n    if (upperCase) {\n      characterList = characterList + includeUpperCase\n    }\n\n    if (numbers) {\n      characterList = characterList + includeNumbers\n    }\n\n    if (symbols) {\n      characterList = characterList + includeSymbols\n    }\n    setPassword(generatePassword(characterList))\n  }\n    const generatePassword = characterList => {\n      let password = ''\n      const characterListLength = characterList.length\n\n      for (let i = 0; i < passwordLength; i++) {\n        const index = Math.round(Math.random() * characterListLength)\n        password = password + characterList.charAt(index)\n      }\n      return password\n    }\n\n  const clipBoardHandler = (e) => {\n    const newTextArea = document.createElement('textarea')\n    newTextArea.innerText = password\n    document.body.appendChild(newTextArea)\n    newTextArea.select()\n    document.execCommand('copy')\n    newTextArea.remove()\n  }\n\n  const copyPasswordHandler = (e) => {\n    if(password === '') {\n      notify('Nothing To Copy', true)\n    } else {\n      clipBoardHandler(\n        notify(success)\n      )\n    }\n  }\n  return (\n    <div className='App'>\n      <div className='container'>\n        <div className='generator'>\n          <h2 className='gen-header'> \n      <i className='fas fa-key'></i> Password Generator</h2>\n          <div className='gen-pass'>\n            <h3>{password}</h3>\n            <button\n              onClick={copyPasswordHandler}\n              className='copy__btn'\n            ><i className='fas fa-clipboard'></i>\n            </button>\n          </div>\n\n          <div className='form-group'>\n            <Form.Label>Password Length</Form.Label>\n            <Form.Control\n              as='select'\n              value={passwordLength}\n              onChange={(e => setPasswordLength(e.target.value))}\n            >\n              <option val='18'>18</option>\n              <option val='24'>24</option>\n              <option val='32'>32</option>\n            </Form.Control>\n          </div>\n\n          <div className='form-group'>\n            <Form.Label>\n              Include Upper Case\n        </Form.Label>\n            <Form.Control\n              type='checkbox'\n              checked={upperCase}\n              onChange={e => setUpperCase(e.target.checked)}\n            ></Form.Control>\n          </div>\n\n          <div className='form-group'>\n            <Form.Label> Include Lower Case</Form.Label>\n            <Form.Control\n              type='checkbox'\n              checked={lowerCase}\n              onChange={e => setLowerCase(e.target.checked)}\n            ></Form.Control>\n          </div>\n          <div className='form-group'>\n            <Form.Label> Include Numbers</Form.Label>\n            <Form.Control\n              type='checkbox'\n              checked={numbers}\n              onChange={e => setNumbers(e.target.checked)}\n            ></Form.Control>\n          </div>\n          <div className='form-group'>\n            <Form.Label> Include Symbols</Form.Label>\n            <Form.Control\n              type='checkbox'\n              checked={symbols}\n              onChange={e => setSymbols(e.target.checked)}\n            ></Form.Control>\n          </div>\n          <Button type='submit' className='btn' onClick={generatePasswordHandler}>Generate Password</Button>\n        </div>\n        <Footer />\n        </div>\n        <ToastContainer\n            position=\"top-center\"\n            autoClose={5000}\n            hideProgressBar={false}\n            newestOnTop={false}\n            closeOnClick\n            rtl={false}\n            pauseOnFocusLoss\n            draggable\n            pauseOnHover\n          />\n{/* Same as */}\n<ToastContainer />\n     \n    </div>\n\n  )\n}\n\nexport default App\n","export const success = 'password successfully copied!'","export const includeUpperCase = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\nexport const includeLowerCase = 'abcdefghijklmnopqrstuvwxyz';\r\nexport const includeNumbers = '1234567890';\r\nexport const includeSymbols = \"!'^+%&/()=?_#$½§{[]}|;:>÷`<.*-@é\";","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}